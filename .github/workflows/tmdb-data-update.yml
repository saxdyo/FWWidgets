name: TMDB_Backdrop_Update
on:
  schedule:
    - cron: "0 0 * * *"  # 每天凌晨执行
  workflow_dispatch:
permissions:
  contents: write
jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          
      - name: Install dependencies
        run: |
          npm install
          
      - name: Run TMDB scraper script
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        run: |
          echo "开始运行 tmdb-scraper.js..."
          echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" > .env
          echo "MAX_MOVIES=100" >> .env
          echo "MAX_TV_SHOWS=50" >> .env
          node tmdb-scraper.js
          echo "tmdb-scraper.js 运行完成"
          
      - name: Check for changes in data files
        id: check_changes
        run: |
          if ! git diff --quiet -- data/; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "检测到数据变更"
            git status --porcelain data/
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "未检测到数据变更"
          fi
          
      - name: Configure Git
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
      - name: Commit and push changes with retry
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          git add data/
          git commit -m "🤖 自动更新TMDB背景图数据 - $(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M:%S')"
          
          for i in {1..3}; do
            echo "尝试推送 (第 $i 次)..."
            
            if git pull origin main --rebase --autostash; then
              echo "成功同步远程更改"
            else
              echo "同步远程更改失败，尝试重置..."
              git rebase --abort 2>/dev/null || true
              git reset --hard HEAD~1
              git pull origin main
              git add data/
              git commit -m "🤖 自动更新TMDB背景图数据 - $(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M:%S')"
            fi
            
            if git push origin main; then
              echo "✅ TMDB背景图数据已成功更新并推送"
              break
            else
              echo "❌ 推送失败"
              if [ $i -eq 3 ]; then
                echo "🚨 所有推送尝试都失败了"
                exit 1
              else
                echo "等待 5 秒后重试..."
                sleep 5
              fi
            fi
          done
          
      - name: Generate update summary
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          echo "## 📊 TMDB数据更新完成" >> $GITHUB_STEP_SUMMARY
          echo "- 更新时间: $(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "data/tmdb-backdrops-metadata.json" ]; then
            echo "- 数据统计:" >> $GITHUB_STEP_SUMMARY
            node -e "
              const meta = JSON.parse(require('fs').readFileSync('data/tmdb-backdrops-metadata.json'));
              console.log('  - 总计: ' + meta.totalItems + ' 项');
              console.log('  - 电影: ' + meta.statistics.movies + ' 部');
              console.log('  - 电视剧: ' + meta.statistics.tvShows + ' 部');
              console.log('  - 平均评分: ' + meta.statistics.averageRating.toFixed(1));
            " >> $GITHUB_STEP_SUMMARY
          fi
          
      - name: Notify if no changes
        if: steps.check_changes.outputs.changes_detected == 'false'
        run: |
          echo "ℹ️ 未检测到数据文件变化，跳过提交"
          echo "## ℹ️ TMDB数据无变更" >> $GITHUB_STEP_SUMMARY
          echo "- 检查时间: $(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
          echo "- 状态: 数据仍然是最新的" >> $GITHUB_STEP_SUMMARY
